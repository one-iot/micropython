# Build and release

name: Release

# Triggers the workflow on push events but only for the master branch
on:
  pull_request:
    
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Define the build job
  build:
    env:
      ESPIDF: /home/runner/src/espressif/esp-idf
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2   # Check out to $GITHUB_WORKSPACE

    - name: Collect Espressif IDF 
      run: |
        mkdir -p $ESPIDF
        cd $ESPIDF
        git clone https://github.com/espressif/esp-idf.git $ESPIDF
        git checkout 4c81978a3e2220674a432a588292a4c860eef27b
        git submodule update --init --recursive
        
    - name: Set up Python
      run: |
        sudo apt-get install python3-venv
        cd $GITHUB_WORKSPACE/ports/esp32
        python3 -m venv build-venv
        source build-venv/bin/activate
        pip install --upgrade pip
        pip install -r $ESPIDF/requirements.txt

    - name: Install Espressif IDF
      run: |
        cd $ESPIDF
        ./install.sh
        
    - name: Build Micropython
      run: |
        cd $GITHUB_WORKSPACE/ports/esp32
        source build-venv/bin/activate
        source $ESPIDF/export.sh
        printf "ESPIDF ?= $ESPIDF\nBOARD ?= GENERIC\n\ninclude Makefile" > makefile

        cd $GITHUB_WORKSPACE/mpy-cross
        make mpy-cross
        
        cd $GITHUB_WORKSPACE/ports/esp32
        make submodules
        make
        
        ls -l $GITHUB_WORKSPACE/ports/esp32
        ls -l $GITHUB_WORKSPACE/ports/esp32/build-GENERIC
        
    - name: Return Bootloader
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: bootloader.bin
        # A file, directory or wildcard pattern that describes what to upload
        path: ./ports/esp32/build-GENERIC/bootloader.bin
        
    - name: Return Partitions
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: partitions.bin
        # A file, directory or wildcard pattern that describes what to upload
        path: ./ports/esp32/build-GENERIC/partitions.bin
        
    - name: Return Application
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: application.bin
        # A file, directory or wildcard pattern that describes what to upload
        path: ./ports/esp32/build-GENERIC/application.bin

  # Define the release job
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create a Release
        uses: actions/create-release@v1
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: github.GITHUB_REF
          # The name of the release. For example, `Release v1.0.1`
          release_name: github.GITHUB_REF
          draft: true
